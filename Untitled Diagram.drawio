<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0" version="27.1.4">
  <diagram name="Page-1" id="GokQLcG7WO0pYvgW-zJp">
    <mxGraphModel dx="3171" dy="4012" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="mDrpf2TN0rHwM7id590o-1" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="bzycmvIp5_qkG32QMUx3-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-220" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bzycmvIp5_qkG32QMUx3-1" value="&lt;a href=&quot;https://copilot.microsoft.com/chats/RHDPdBvyvpDGnnrWRSW6V&quot;&gt;Microsoft Copilot: Your AI companion&lt;/a&gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-570" y="230" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="bzycmvIp5_qkG32QMUx3-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0;exitDx=0;exitDy=0;" parent="1" source="bzycmvIp5_qkG32QMUx3-2" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="310" y="350" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bzycmvIp5_qkG32QMUx3-2" value="&lt;p&gt;&lt;strong&gt;Prompt:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&quot;Please generate an HTML file that exactly reproduces the following structure and elements. Each element, its ID or class, and the order must be preserved exactly so that it works with the existing JavaScript and CSS on my site:&lt;/p&gt;&lt;ol start=&quot;1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Document Declaration and Head:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Start with a DOCTYPE declaration followed by an opening HTML element.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;In the HEAD section, include a meta tag that sets the charset to UTF-8.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Set the page title to &#39;ADIB AI Data Assistant&#39;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Link to the jQuery UI CSS by referencing its base theme from the appropriate online source.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Body and Header Section:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Create a HEADER area with an ID &#39;header&#39;. Inside it, add a left container (with class &#39;header-left&#39;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Within the header-left container, include a logo container (using class &#39;logo-container&#39;) that contains an image with a specified source URL (pointing to the ADIB logo) and an alternate text of &#39;ADIB Logo&#39;. Directly following the image, add a text element (using a DIV with class &#39;app-name&#39;) that displays &#39;ADIB AI Data Assistant&#39;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Also within the same header-left area, create two menu sections:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The first menu (with ID &#39;file-menu&#39; and class &#39;menu&#39;) should display the label &#39;File&#39; and include a dropdown menu (a DIV with class &#39;dropdown&#39;). This dropdown must contain five anchor items with the following labels and corresponding unique IDs: &#39;Open (Excel)&#39; (ID &#39;open-excel&#39;), &#39;SharePoint Connector&#39; (ID &#39;sharepoint-connector&#39;), &#39;Save Dashboard&#39; (ID &#39;save-dashboard&#39;), &#39;Export&#39; (ID &#39;export-settings&#39;), and &#39;Import&#39; (ID &#39;import-settings&#39;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The second menu (with ID &#39;view-menu&#39; and class &#39;menu&#39;) should display the label &#39;View&#39; and include its own dropdown. This dropdown should include one anchor item labeled &#39;Toggle Data Explorer&#39; with the ID &#39;toggle-data-explorer&#39;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Outside the header-left container but still in the header, place a button with the ID &#39;toggle-view&#39; that is labeled &#39;Switch to Dashboard&#39;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Main Content Area:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Create a main container (a DIV with ID &#39;main-container&#39;) that includes two separate sections:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Data Assistant View:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;This section is wrapped in a DIV with the ID &#39;data-assistant-view&#39;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Within it, the left pane (a DIV with ID &#39;left-pane&#39;) should include a chat window (a DIV with class &#39;chat-window&#39; and ID &#39;chat-window&#39; where chat messages will appear).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Beneath the chat window, add a query wrapper (a DIV with ID &#39;query-wrapper&#39;). Inside this wrapper, create a query area (with ID &#39;query-area&#39;) that includes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;A span with ID &#39;file-attach-btn&#39; displaying an attachment icon.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A textarea with the ID &#39;query-textbox&#39; and a placeholder reading &#39;Enter your query...&#39;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A submit button with the ID &#39;submit-btn&#39; displaying an arrow icon.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Also inside the query wrapper, there should be a query options section (a DIV with ID &#39;query-options&#39;) that contains:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;A drop-down select element (with ID &#39;db-engine&#39;) that lists options for database engines: &#39;SQLite&#39;, &#39;Teradata&#39;, &#39;SQL Server&#39;, &#39;Oracle&#39;, &#39;Sybase&#39;, &#39;Impala&#39;, and &#39;Hive&#39;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Two buttons: one with the ID &#39;direct-openai&#39; labeled &#39;Direct OpenAI&#39;, and another with the ID &#39;get-copilot&#39; labeled &#39;Get Copilot Prompt&#39;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Data Explorer Pane:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Still inside the data assistant view but occupying the right side, add a right pane (a DIV with ID &#39;right-pane&#39;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Place in this pane a container (a DIV with ID &#39;data-explorer&#39;) that starts with a heading &#39;Data Explorer&#39;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Under the heading, include a DIV (with ID &#39;table-list&#39;) intended for listing tables (for example, from SQLite).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Additionally, add a drop zone (a DIV with ID &#39;drop-zone&#39;) which should have inline styles—a dashed border, padding, centered text, and a top margin—to prompt the user to drag and drop an Excel file to import.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Dashboard View:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Create another section in the main container (a DIV with ID &#39;dashboard-view&#39;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Inside it, set up a tabbed panel (a DIV with ID &#39;dashboard-tabs&#39;) that uses an unordered list to define the tabs:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The first list item should have a data attribute marking it with a tab ID of ‘1’, include an anchor linking to a section labeled &#39;Dashboard 1&#39; (which should be linked to a corresponding content DIV), and a span for a close icon using standard jQuery UI icon classes.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Add an additional list item, with the ID &#39;add-tab&#39;, that provides a way to add a new tab—this should include an anchor with the symbol &#39;+&#39;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Directly underneath the tab list, include a container for the tab content with an ID &#39;dashboard-tab-1&#39; and a class &#39;dashboard-tab&#39;. This container should further contain a DIV (with class &#39;dashboard-tiles&#39; and ID &#39;dashboard-tiles-1&#39;) where dashboard tiles will be inserted.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Also include a button (with ID &#39;toggle-assistant&#39;) positioned absolutely at the top right (using inline styles) that reads &#39;Switch to Data Assistant&#39;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Hidden File Inputs:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Below the main section, add two file input elements that are hidden by default.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The first should have an ID &#39;excel-file-input&#39;, accept only &#39;.xlsx&#39; files, and be styled with display set to none.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The second should have an ID &#39;import-file-input&#39;, accept files with a &#39;.id&#39; extension, and also be hidden.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Modals and Dialogs:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Copilot Prompt Modal:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Create a dialog (a DIV with ID &#39;copilot-modal&#39;, title &#39;Copilot Prompt&#39;, and a class &#39;modal-dialog&#39;) that contains:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;A read-only textarea (with ID &#39;copilot-prompt&#39;) styled to be 100% in width and 150px in height.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A button (with ID &#39;copy-copilot&#39;) labeled &#39;Copy to Clipboard&#39;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Dashboard Tile Settings Modal:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Create another modal dialog (a DIV with ID &#39;chart-settings-modal&#39;, title &#39;Tile Settings&#39;, and class &#39;modal-dialog&#39;) that includes several input fields:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;A section with a label &#39;Tile Title:&#39; and an input field (with ID &#39;tile-title&#39;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A section with a label &#39;Display Mode:&#39; and a select dropdown (with ID &#39;chart-type&#39;) containing options for &#39;Bar&#39;, &#39;Donut&#39;, &#39;Pie&#39;, &#39;Table&#39;, and &#39;Grid (Sortable)&#39;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A section with a label &#39;Data Labels:&#39; accompanied by a checkbox (with ID &#39;data-labels&#39;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A section with a label &#39;Background Color:&#39; and a color input (with ID &#39;bg-color&#39; and preset to a value of &#39;#0084ff&#39;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A section that starts with a paragraph stating &#39;Stored Query (editable):&#39; followed by a textarea (with ID &#39;tile-query&#39;, styled to be 100% wide and 80px tall).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Lastly, include a button (with ID &#39;save-chart-settings&#39;) labeled &#39;Save&#39;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;SharePoint Connector Dialog:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Form a dialog (a DIV with ID &#39;sharepoint-dialog&#39;, title &#39;SharePoint Connector&#39;, class &#39;modal-dialog&#39;, styled to be hidden initially) containing a form (with ID &#39;sharepoint-form&#39;) that includes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;A field (inside a DIV) with a label &#39;Site URL:&#39; and a required text input (with ID &#39;sp-site-url&#39; and styled to occupy full width).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Another field (inside a DIV) with a label &#39;List Name:&#39; and a required text input (with ID &#39;sp-list-name&#39;, similarly styled).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;An error message container (a DIV with ID &#39;sp-error&#39;, styled with red text, initially hidden, and with a small top margin).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A final DIV for the action buttons, right-aligned and with a top margin, containing two buttons: one button of type &#39;button&#39; with ID &#39;sp-connect&#39; labeled &#39;Connect&#39; and another with ID &#39;sp-cancel&#39; labeled &#39;Cancel&#39;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;JavaScript Libraries:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Before closing the BODY, include script references for required JavaScript libraries in this order:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Load jQuery (version 3.6.0) first.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Follow with jQuery UI (version 1.12.1).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Add Chart.js, then the ChartDataLabels plugin (version 2.2.0).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Next, include the xlsx library (version 0.18.5) and &lt;button data-url=&quot;https://SQL.js&quot; type=&quot;button&quot;&gt;SQL.js &lt;/button&gt; (version 1.8.0).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Finally, leave an empty script tag (or include your custom script) for any additional JavaScript functions.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Please ensure that your generated HTML exactly follows the structure, IDs, classes, and order as described. No extraneous elements or alterations should be made, as this template must work flawlessly with the pre-existing CSS and JavaScript functions already in place.&quot;&lt;/p&gt;" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;" parent="1" vertex="1">
          <mxGeometry x="190" y="230" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="bzycmvIp5_qkG32QMUx3-4" value="&lt;p style=&quot;overflow-wrap: break-word; margin: 6px 0px 10px; max-width: none; color: rgb(66, 66, 66); font-family: &amp;quot;Segoe Sans&amp;quot;, &amp;quot;Segoe UI&amp;quot;, &amp;quot;Segoe UI Web (West European)&amp;quot;, -apple-system, BlinkMacSystemFont, Roboto, &amp;quot;Helvetica Neue&amp;quot;, sans-serif; font-size: 16px; text-align: start; background-color: rgb(250, 250, 250);&quot;&gt;&lt;a href=&quot;https://cdn1-private.infotech.com/private_asset_archives/uploads/21969/Map-Your-Business-Architecture-to-Define-Your-Strategy.zip?Expires=1746636942&amp;amp;Signature=qb7lyRYatPvJBcTWGcS94Tm~XofcYWkefp7NIBDCYnLiJneAgGg2HeXWX5P8tQNg4sex3ENXRUD4rSU1b82uz2FGQ7qzguQDsDrNr2o6XaPWUx~dZLCHOc12usTXoMQGCdFLqt-Auya1kePpdOAIXHOYyET3RiksuI58DzGjRgHldEvC5aFtrAF8df~TyVxoGGpKZv1Ybi2bjfDafrSC33xtrxjkq8RE1dAnFZ5hbkJmfIDP9HP9rxowL7DMSwHiTIWWEvbS-edxhB40b3G1KMavXnQvdoxZWyo~ROnIO3HuZz~1dBLcHKfmVGlY9vErkpX1pkfN0GyEH71wldFdSw__&amp;amp;Key-Pair-Id=K3580I9TTO3F0A&quot;&gt;Access to this site is blocked&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;overflow-wrap: break-word; margin: 6px 0px 10px; max-width: none; color: rgb(66, 66, 66); font-family: &amp;quot;Segoe Sans&amp;quot;, &amp;quot;Segoe UI&amp;quot;, &amp;quot;Segoe UI Web (West European)&amp;quot;, -apple-system, BlinkMacSystemFont, Roboto, &amp;quot;Helvetica Neue&amp;quot;, sans-serif; font-size: 16px; text-align: start; background-color: rgb(250, 250, 250);&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;overflow-wrap: break-word; margin: 6px 0px 10px; max-width: none; color: rgb(66, 66, 66); font-family: &amp;quot;Segoe Sans&amp;quot;, &amp;quot;Segoe UI&amp;quot;, &amp;quot;Segoe UI Web (West European)&amp;quot;, -apple-system, BlinkMacSystemFont, Roboto, &amp;quot;Helvetica Neue&amp;quot;, sans-serif; font-size: 16px; text-align: start; background-color: rgb(250, 250, 250);&quot;&gt;&lt;a href=&quot;https://cdn1-private.infotech.com/private_asset_archives/uploads/21969/Map-Your-Business-Architecture-to-Define-Your-Strategy.zip?Expires=1746636942&amp;amp;Signature=qb7lyRYatPvJBcTWGcS94Tm~XofcYWkefp7NIBDCYnLiJneAgGg2HeXWX5P8tQNg4sex3ENXRUD4rSU1b82uz2FGQ7qzguQDsDrNr2o6XaPWUx~dZLCHOc12usTXoMQGCdFLqt-Auya1kePpdOAIXHOYyET3RiksuI58DzGjRgHldEvC5aFtrAF8df~TyVxoGGpKZv1Ybi2bjfDafrSC33xtrxjkq8RE1dAnFZ5hbkJmfIDP9HP9rxowL7DMSwHiTIWWEvbS-edxhB40b3G1KMavXnQvdoxZWyo~ROnIO3HuZz~1dBLcHKfmVGlY9vErkpX1pkfN0GyEH71wldFdSw__&amp;amp;Key-Pair-Id=K3580I9TTO3F0A&quot;&gt;https://cdn1-private.infotech.com/private_asset_archives/uploads/21969/Map-Your-Business-Architecture-to-Define-Your-Strategy.zip?Expires=1746636942&amp;amp;Signature=qb7lyRYatPvJBcTWGcS94Tm~XofcYWkefp7NIBDCYnLiJneAgGg2HeXWX5P8tQNg4sex3ENXRUD4rSU1b82uz2FGQ7qzguQDsDrNr2o6XaPWUx~dZLCHOc12usTXoMQGCdFLqt-Auya1kePpdOAIXHOYyET3RiksuI58DzGjRgHldEvC5aFtrAF8df~TyVxoGGpKZv1Ybi2bjfDafrSC33xtrxjkq8RE1dAnFZ5hbkJmfIDP9HP9rxowL7DMSwHiTIWWEvbS-edxhB40b3G1KMavXnQvdoxZWyo~ROnIO3HuZz~1dBLcHKfmVGlY9vErkpX1pkfN0GyEH71wldFdSw__&amp;amp;Key-Pair-Id=K3580I9TTO3F0A&lt;/a&gt;&lt;/p&gt;" style="ellipse;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-250" y="-1200" width="540" height="80" as="geometry" />
        </mxCell>
        <UserObject label="&lt;div&gt;&lt;div role=&quot;article&quot; tabindex=&quot;0&quot; aria-labelledby=&quot;NnMhsxXhJ4JxKkQdHDMvo-user-message&quot; id=&quot;NnMhsxXhJ4JxKkQdHDMvo-user-message&quot; data-tabster=&quot;{&amp;quot;groupper&amp;quot;:{&amp;quot;tabbability&amp;quot;:2},&amp;quot;focusable&amp;quot;:{}}&quot;&gt;&lt;div data-content=&quot;user-message&quot;&gt;how to embed html code in html as text .give me html app that convert html code into this format. user should have textbox to paste html code and conver button should conver and diplay in another textbox.also write functionality to reverse it. there should be an option to copy converted html&lt;/div&gt;&lt;/div&gt;&lt;i aria-hidden=&quot;true&quot; data-tabster-dummy=&quot;&quot; role=&quot;none&quot; tabindex=&quot;0&quot;&gt;&lt;/i&gt;&lt;/div&gt;" id="mDrpf2TN0rHwM7id590o-3">
          <mxCell style="whiteSpace=wrap;html=1;aspect=fixed;align=left;" parent="1" vertex="1">
            <mxGeometry x="-1030" y="-1010" width="450" height="450" as="geometry" />
          </mxCell>
        </UserObject>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
