<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0" version="27.1.4">
  <diagram name="Page-1" id="GokQLcG7WO0pYvgW-zJp">
    <mxGraphModel dx="4169" dy="9077" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="mDrpf2TN0rHwM7id590o-1" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="bzycmvIp5_qkG32QMUx3-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-220" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bzycmvIp5_qkG32QMUx3-1" value="&lt;a href=&quot;https://copilot.microsoft.com/chats/RHDPdBvyvpDGnnrWRSW6V&quot;&gt;Microsoft Copilot: Your AI companion&lt;/a&gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-570" y="230" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="bzycmvIp5_qkG32QMUx3-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0;exitDx=0;exitDy=0;" parent="1" source="bzycmvIp5_qkG32QMUx3-2" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="310" y="350" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bzycmvIp5_qkG32QMUx3-2" value="" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;" parent="1" vertex="1">
          <mxGeometry x="190" y="230" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="bzycmvIp5_qkG32QMUx3-4" value="&lt;p style=&quot;overflow-wrap: break-word; margin: 6px 0px 10px; max-width: none; color: rgb(66, 66, 66); font-family: &amp;quot;Segoe Sans&amp;quot;, &amp;quot;Segoe UI&amp;quot;, &amp;quot;Segoe UI Web (West European)&amp;quot;, -apple-system, BlinkMacSystemFont, Roboto, &amp;quot;Helvetica Neue&amp;quot;, sans-serif; font-size: 16px; text-align: start; background-color: rgb(250, 250, 250);&quot;&gt;&lt;a href=&quot;https://cdn1-private.infotech.com/private_asset_archives/uploads/21969/Map-Your-Business-Architecture-to-Define-Your-Strategy.zip?Expires=1746636942&amp;amp;Signature=qb7lyRYatPvJBcTWGcS94Tm~XofcYWkefp7NIBDCYnLiJneAgGg2HeXWX5P8tQNg4sex3ENXRUD4rSU1b82uz2FGQ7qzguQDsDrNr2o6XaPWUx~dZLCHOc12usTXoMQGCdFLqt-Auya1kePpdOAIXHOYyET3RiksuI58DzGjRgHldEvC5aFtrAF8df~TyVxoGGpKZv1Ybi2bjfDafrSC33xtrxjkq8RE1dAnFZ5hbkJmfIDP9HP9rxowL7DMSwHiTIWWEvbS-edxhB40b3G1KMavXnQvdoxZWyo~ROnIO3HuZz~1dBLcHKfmVGlY9vErkpX1pkfN0GyEH71wldFdSw__&amp;amp;Key-Pair-Id=K3580I9TTO3F0A&quot;&gt;Access to this site is blocked&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;overflow-wrap: break-word; margin: 6px 0px 10px; max-width: none; color: rgb(66, 66, 66); font-family: &amp;quot;Segoe Sans&amp;quot;, &amp;quot;Segoe UI&amp;quot;, &amp;quot;Segoe UI Web (West European)&amp;quot;, -apple-system, BlinkMacSystemFont, Roboto, &amp;quot;Helvetica Neue&amp;quot;, sans-serif; font-size: 16px; text-align: start; background-color: rgb(250, 250, 250);&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;overflow-wrap: break-word; margin: 6px 0px 10px; max-width: none; color: rgb(66, 66, 66); font-family: &amp;quot;Segoe Sans&amp;quot;, &amp;quot;Segoe UI&amp;quot;, &amp;quot;Segoe UI Web (West European)&amp;quot;, -apple-system, BlinkMacSystemFont, Roboto, &amp;quot;Helvetica Neue&amp;quot;, sans-serif; font-size: 16px; text-align: start; background-color: rgb(250, 250, 250);&quot;&gt;&lt;a href=&quot;https://cdn1-private.infotech.com/private_asset_archives/uploads/21969/Map-Your-Business-Architecture-to-Define-Your-Strategy.zip?Expires=1746636942&amp;amp;Signature=qb7lyRYatPvJBcTWGcS94Tm~XofcYWkefp7NIBDCYnLiJneAgGg2HeXWX5P8tQNg4sex3ENXRUD4rSU1b82uz2FGQ7qzguQDsDrNr2o6XaPWUx~dZLCHOc12usTXoMQGCdFLqt-Auya1kePpdOAIXHOYyET3RiksuI58DzGjRgHldEvC5aFtrAF8df~TyVxoGGpKZv1Ybi2bjfDafrSC33xtrxjkq8RE1dAnFZ5hbkJmfIDP9HP9rxowL7DMSwHiTIWWEvbS-edxhB40b3G1KMavXnQvdoxZWyo~ROnIO3HuZz~1dBLcHKfmVGlY9vErkpX1pkfN0GyEH71wldFdSw__&amp;amp;Key-Pair-Id=K3580I9TTO3F0A&quot;&gt;https://cdn1-private.infotech.com/private_asset_archives/uploads/21969/Map-Your-Business-Architecture-to-Define-Your-Strategy.zip?Expires=1746636942&amp;amp;Signature=qb7lyRYatPvJBcTWGcS94Tm~XofcYWkefp7NIBDCYnLiJneAgGg2HeXWX5P8tQNg4sex3ENXRUD4rSU1b82uz2FGQ7qzguQDsDrNr2o6XaPWUx~dZLCHOc12usTXoMQGCdFLqt-Auya1kePpdOAIXHOYyET3RiksuI58DzGjRgHldEvC5aFtrAF8df~TyVxoGGpKZv1Ybi2bjfDafrSC33xtrxjkq8RE1dAnFZ5hbkJmfIDP9HP9rxowL7DMSwHiTIWWEvbS-edxhB40b3G1KMavXnQvdoxZWyo~ROnIO3HuZz~1dBLcHKfmVGlY9vErkpX1pkfN0GyEH71wldFdSw__&amp;amp;Key-Pair-Id=K3580I9TTO3F0A&lt;/a&gt;&lt;/p&gt;" style="ellipse;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-250" y="-1200" width="540" height="80" as="geometry" />
        </mxCell>
        <UserObject label="// /netlify/functions/openai.js&#xa;const fetch = require(&quot;node-fetch&quot;);&#xa;&#xa;&#xa;exports.handler = async (event, context) =&gt; {&#xa;  try {&#xa;    if (event.httpMethod !== &quot;POST&quot;) {&#xa;      return {&#xa;        statusCode: 405,&#xa;        body: JSON.stringify({ error: &quot;Method Not Allowed&quot; })&#xa;      };&#xa;    }&#xa;&#xa;&#xa;    const { userQuery, schema, envKey } = JSON.parse(event.body || &quot;{}&quot;);&#xa;&#xa;&#xa;    // Validate the client-supplied key.&#xa;    const ALLOWED_ENV_KEY = &quot;SECRET_ENV_KEY&quot;; // Hard-coded for this example&#xa;    if (envKey !== ALLOWED_ENV_KEY) {&#xa;      return {&#xa;        statusCode: 401,&#xa;        body: JSON.stringify({ error: &quot;Unauthorized&quot; })&#xa;      };&#xa;    }&#xa;&#xa;&#xa;    // Build the schema text from the structured object sent by the client.&#xa;    let schemaText = &quot;&quot;;&#xa;    if (Array.isArray(schema) &amp;&amp; schema.length) {&#xa;      schema.forEach(item =&gt; {&#xa;        if (item.table &amp;&amp; Array.isArray(item.columns)) {&#xa;          schemaText += &quot;Table &quot; + item.table + &quot;: Columns: &quot; + item.columns.join(&quot;, &quot;) + &quot;\n&quot;;&#xa;        }&#xa;      });&#xa;    } else {&#xa;      schemaText = &quot;No tables available.&quot;;&#xa;    }&#xa;&#xa;&#xa;    // Build the final prompt on the server.&#xa;    const prompt = &quot;Using SQLite syntax, based on the following schema:\n&quot; +&#xa;      schemaText +&#xa;      &quot;\nGenerate the SQL query for the following natural language description:\n\&quot;&quot; +&#xa;      userQuery +&#xa;      &quot;\&quot;\nReturn only the SQL query.&quot;;&#xa;&#xa;&#xa;    // Retrieve the OpenAI API key from your environment settings.&#xa;    const OPENAI_API_KEY = process.env.OPENAI_API_KEY;&#xa;    if (!OPENAI_API_KEY) {&#xa;      return {&#xa;        statusCode: 500,&#xa;        body: JSON.stringify({ error: &quot;Server configuration error&quot; })&#xa;      };&#xa;    }&#xa;&#xa;&#xa;    // Call the OpenAI API.&#xa;    const openaiResponse = await fetch(&quot;https://api.openai.com/v1/chat/completions&quot;, {&#xa;      method: &quot;POST&quot;,&#xa;      headers: {&#xa;        &quot;Content-Type&quot;: &quot;application/json&quot;,&#xa;        &quot;Authorization&quot;: `Bearer ${OPENAI_API_KEY}`&#xa;      },&#xa;      body: JSON.stringify({&#xa;        model: &quot;gpt-3.5-turbo&quot;,&#xa;        messages: [&#xa;          { role: &quot;system&quot;, content: &quot;You are a helpful SQL assistant.&quot; },&#xa;          { role: &quot;user&quot;, content: prompt }&#xa;        ]&#xa;      })&#xa;    });&#xa;&#xa;&#xa;    const data = await openaiResponse.json();&#xa;&#xa;&#xa;    return {&#xa;      statusCode: 200,&#xa;      body: JSON.stringify(data)&#xa;    };&#xa;&#xa;&#xa;  } catch (error) {&#xa;    return {&#xa;      statusCode: 500,&#xa;      body: JSON.stringify({ error: error.message })&#xa;    };&#xa;  }&#xa;};" link="// /netlify/functions/openai.js&#xa;const fetch = require(&quot;node-fetch&quot;);&#xa;&#xa;&#xa;exports.handler = async (event, context) =&gt; {&#xa;  try {&#xa;    if (event.httpMethod !== &quot;POST&quot;) {&#xa;      return {&#xa;        statusCode: 405,&#xa;        body: JSON.stringify({ error: &quot;Method Not Allowed&quot; })&#xa;      };&#xa;    }&#xa;&#xa;&#xa;    const { userQuery, schema, envKey } = JSON.parse(event.body || &quot;{}&quot;);&#xa;&#xa;&#xa;    // Validate the client-supplied key.&#xa;    const ALLOWED_ENV_KEY = &quot;SECRET_ENV_KEY&quot;; // Hard-coded for this example&#xa;    if (envKey !== ALLOWED_ENV_KEY) {&#xa;      return {&#xa;        statusCode: 401,&#xa;        body: JSON.stringify({ error: &quot;Unauthorized&quot; })&#xa;      };&#xa;    }&#xa;&#xa;&#xa;    // Build the schema text from the structured object sent by the client.&#xa;    let schemaText = &quot;&quot;;&#xa;    if (Array.isArray(schema) &amp;&amp; schema.length) {&#xa;      schema.forEach(item =&gt; {&#xa;        if (item.table &amp;&amp; Array.isArray(item.columns)) {&#xa;          schemaText += &quot;Table &quot; + item.table + &quot;: Columns: &quot; + item.columns.join(&quot;, &quot;) + &quot;\n&quot;;&#xa;        }&#xa;      });&#xa;    } else {&#xa;      schemaText = &quot;No tables available.&quot;;&#xa;    }&#xa;&#xa;&#xa;    // Build the final prompt on the server.&#xa;    const prompt = &quot;Using SQLite syntax, based on the following schema:\n&quot; +&#xa;      schemaText +&#xa;      &quot;\nGenerate the SQL query for the following natural language description:\n\&quot;&quot; +&#xa;      userQuery +&#xa;      &quot;\&quot;\nReturn only the SQL query.&quot;;&#xa;&#xa;&#xa;    // Retrieve the OpenAI API key from your environment settings.&#xa;    const OPENAI_API_KEY = process.env.OPENAI_API_KEY;&#xa;    if (!OPENAI_API_KEY) {&#xa;      return {&#xa;        statusCode: 500,&#xa;        body: JSON.stringify({ error: &quot;Server configuration error&quot; })&#xa;      };&#xa;    }&#xa;&#xa;&#xa;    // Call the OpenAI API.&#xa;    const openaiResponse = await fetch(&quot;https://api.openai.com/v1/chat/completions&quot;, {&#xa;      method: &quot;POST&quot;,&#xa;      headers: {&#xa;        &quot;Content-Type&quot;: &quot;application/json&quot;,&#xa;        &quot;Authorization&quot;: `Bearer ${OPENAI_API_KEY}`&#xa;      },&#xa;      body: JSON.stringify({&#xa;        model: &quot;gpt-3.5-turbo&quot;,&#xa;        messages: [&#xa;          { role: &quot;system&quot;, content: &quot;You are a helpful SQL assistant.&quot; },&#xa;          { role: &quot;user&quot;, content: prompt }&#xa;        ]&#xa;      })&#xa;    });&#xa;&#xa;&#xa;    const data = await openaiResponse.json();&#xa;&#xa;&#xa;    return {&#xa;      statusCode: 200,&#xa;      body: JSON.stringify(data)&#xa;    };&#xa;&#xa;&#xa;  } catch (error) {&#xa;    return {&#xa;      statusCode: 500,&#xa;      body: JSON.stringify({ error: error.message })&#xa;    };&#xa;  }&#xa;};" id="mDrpf2TN0rHwM7id590o-3">
          <mxCell style="whiteSpace=wrap;html=1;aspect=fixed;align=left;" parent="1" vertex="1">
            <mxGeometry x="-1030" y="-1010" width="450" height="450" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="prdKm51BEi7v1M33W9Gl-1" value="&lt;div&gt;&lt;div&gt;&amp;lt;head&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;title&amp;gt;ADIB AI Data Assistant&amp;lt;/title&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;!-- jQuery UI CSS for dialogs and tabs --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;lt;/head&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;lt;body&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;!-- HEADER --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;div id=&quot;header&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div class=&quot;header-left&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div class=&quot;logo-container&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;img src=&quot;https://www.adib.ae/-/media/project/adib/adibsite/header/logo.svg?h=53&amp;amp;iar=0&amp;amp;w=269&amp;amp;hash=410F7C438CB85524DC3E09F61B807495&quot; alt=&quot;ADIB Logo&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div class=&quot;app-name&quot;&amp;gt;ADIB AI Data Assistant&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;!-- File Menu with SharePoint Connector --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div class=&quot;menu&quot; id=&quot;file-menu&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;span&amp;gt;File&amp;lt;/span&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div class=&quot;dropdown&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;a href=&quot;#&quot; id=&quot;open-excel&quot;&amp;gt;Open (Excel)&amp;lt;/a&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;a href=&quot;#&quot; id=&quot;sharepoint-connector&quot;&amp;gt;SharePoint Connector&amp;lt;/a&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;a href=&quot;#&quot; id=&quot;save-dashboard&quot;&amp;gt;Save Dashboard&amp;lt;/a&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;a href=&quot;#&quot; id=&quot;export-settings&quot;&amp;gt;Export&amp;lt;/a&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;a href=&quot;#&quot; id=&quot;import-settings&quot;&amp;gt;Import&amp;lt;/a&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;!-- View Menu with Toggle Data Explorer option --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div class=&quot;menu&quot; id=&quot;view-menu&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;span&amp;gt;View&amp;lt;/span&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div class=&quot;dropdown&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;a href=&quot;#&quot; id=&quot;toggle-data-explorer&quot;&amp;gt;Toggle Data Explorer&amp;lt;/a&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;!-- Toggle view button at top-right --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;button id=&quot;toggle-view&quot;&amp;gt;Switch to Dashboard&amp;lt;/button&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;!-- MAIN CONTENT AREA --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;div id=&quot;main-container&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;!-- Data Assistant View --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;data-assistant-view&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;!-- Left Pane: Chat &amp;amp; Query --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;left-pane&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div class=&quot;chat-window&quot; id=&quot;chat-window&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;!-- Chat messages will be appended here --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;!-- Query Wrapper with unified border --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;query-wrapper&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;query-area&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;span id=&quot;file-attach-btn&quot;&amp;gt;������&amp;lt;/span&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;textarea id=&quot;query-textbox&quot; placeholder=&quot;Enter your query...&quot;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;button id=&quot;submit-btn&quot;&amp;gt;➤&amp;lt;/button&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;query-options&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;select id=&quot;db-engine&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;option value=&quot;sqlite&quot;&amp;gt;SQLite&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;option value=&quot;teradata&quot;&amp;gt;Teradata&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;option value=&quot;sqlserver&quot;&amp;gt;SQL Server&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;option value=&quot;oracle&quot;&amp;gt;Oracle&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;option value=&quot;sybase&quot;&amp;gt;Sybase&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;option value=&quot;impala&quot;&amp;gt;Impala&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;option value=&quot;hive&quot;&amp;gt;Hive&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/select&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;button id=&quot;direct-openai&quot;&amp;gt;Direct OpenAI&amp;lt;/button&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;button id=&quot;get-copilot&quot;&amp;gt;Get Copilot Prompt&amp;lt;/button&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;!-- Right Pane: Data Explorer --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;right-pane&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;data-explorer&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;h3&amp;gt;Data Explorer&amp;lt;/h3&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;table-list&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;!-- SQLite table list goes here --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;drop-zone&quot; style=&quot;border:2px dashed #ccc; padding:10px; text-align:center; margin-top:10px;&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Drag &amp;amp; Drop Excel file here to import.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;!-- Dashboard View --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;dashboard-view&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;dashboard-tabs&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;ul&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;li data-tabid=&quot;1&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;a href=&quot;#dashboard-tab-1&quot;&amp;gt;Dashboard 1&amp;lt;/a&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;span class=&quot;ui-icon ui-icon-close&quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/li&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;li id=&quot;add-tab&quot;&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;+&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/ul&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;dashboard-tab-1&quot; class=&quot;dashboard-tab&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div class=&quot;dashboard-tiles&quot; id=&quot;dashboard-tiles-1&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;!-- Dashboard tiles will be inserted here --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;button id=&quot;toggle-assistant&quot; style=&quot;position:absolute; top:10px; right:10px;&quot;&amp;gt;Switch to Data Assistant&amp;lt;/button&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;!-- Hidden File Inputs --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;input type=&quot;file&quot; id=&quot;excel-file-input&quot; accept=&quot;.xlsx&quot; style=&quot;display:none&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;input type=&quot;file&quot; id=&quot;import-file-input&quot; accept=&quot;.id&quot; style=&quot;display:none&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;!-- Copilot Prompt Modal --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;div id=&quot;copilot-modal&quot; title=&quot;Copilot Prompt&quot; class=&quot;modal-dialog&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;textarea id=&quot;copilot-prompt&quot; style=&quot;width:100%; height:150px;&quot; readonly&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;button id=&quot;copy-copilot&quot;&amp;gt;Copy to Clipboard&amp;lt;/button&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;!-- Dashboard Tile Settings Modal --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;div id=&quot;chart-settings-modal&quot; title=&quot;Tile Settings&quot; class=&quot;modal-dialog&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;label&amp;gt;Tile Title: &amp;lt;/label&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;input type=&quot;text&quot; id=&quot;tile-title&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;label&amp;gt;Display Mode: &amp;lt;/label&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;select id=&quot;chart-type&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;option value=&quot;bar&quot;&amp;gt;Bar&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;option value=&quot;donut&quot;&amp;gt;Donut&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;option value=&quot;pie&quot;&amp;gt;Pie&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;option value=&quot;table&quot;&amp;gt;Table&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;option value=&quot;grid&quot;&amp;gt;Grid (Sortable)&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/select&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;label&amp;gt;Data Labels: &amp;lt;/label&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;input type=&quot;checkbox&quot; id=&quot;data-labels&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;label&amp;gt;Background Color: &amp;lt;/label&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;input type=&quot;color&quot; id=&quot;bg-color&quot; value=&quot;#0084ff&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;p&amp;gt;Stored Query (editable):&amp;lt;/p&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;textarea id=&quot;tile-query&quot; style=&quot;width:100%; height:80px;&quot;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;button id=&quot;save-chart-settings&quot;&amp;gt;Save&amp;lt;/button&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;!-- SharePoint Connector Dialog --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;div id=&quot;sharepoint-dialog&quot; title=&quot;SharePoint Connector&quot; class=&quot;modal-dialog&quot; style=&quot;display:none;&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;form id=&quot;sharepoint-form&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;label&amp;gt;Site URL:&amp;lt;/label&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;input type=&quot;text&quot; id=&quot;sp-site-url&quot; style=&quot;width:100%;&quot; required&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;label&amp;gt;List Name:&amp;lt;/label&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;input type=&quot;text&quot; id=&quot;sp-list-name&quot; style=&quot;width:100%;&quot; required&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;sp-error&quot; style=&quot;color:red; display:none; margin-top:5px;&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div style=&quot;margin-top:10px; text-align: right;&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;button type=&quot;button&quot; id=&quot;sp-connect&quot;&amp;gt;Connect&amp;lt;/button&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;button type=&quot;button&quot; id=&quot;sp-cancel&quot;&amp;gt;Cancel&amp;lt;/button&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/form&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;!-- JS Libraries --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;script src=&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;script src=&quot;https://code.jquery.com/ui/1.12.1/jquery-ui.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/chart.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;!-- ChartDataLabels plugin --&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/sql.js/1.8.0/sql-wasm.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;lt;script&amp;gt;&lt;/div&gt;&lt;/div&gt;" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry y="-2020" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="prdKm51BEi7v1M33W9Gl-2" value="sdasasa&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp; /******************** Global Variables ********************/&lt;/span&gt;&lt;div&gt;var db; // In-browser SQLite database instance&lt;/div&gt;&lt;div&gt;var queryHistory = [];&lt;/div&gt;&lt;div&gt;var historyIndex = -1;&lt;/div&gt;&lt;div&gt;var currentDashboardTab = &quot;1&quot;; // default dashboard tab id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Initialize SQL.js and Database ********************/&lt;/div&gt;&lt;div&gt;initSqlJs({ locateFile: filename =&amp;gt; &#39;https://cdnjs.cloudflare.com/ajax/libs/sql.js/1.8.0/&#39; + filename })&lt;/div&gt;&lt;div&gt;&amp;nbsp; .then(function(SQL) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; db = new SQL.Database();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; updateTableList();&lt;/div&gt;&lt;div&gt;&amp;nbsp; });&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Dashboard Tabs Initialization ********************/&lt;/div&gt;&lt;div&gt;function initDashboardTabs(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#dashboard-tabs&quot;).tabs({&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; activate: function(event, ui) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; currentDashboardTab = $(ui.newPanel).attr(&quot;id&quot;).split(&quot;-&quot;).pop();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; });&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;initDashboardTabs();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Save &amp;amp; Load Dashboard Settings ********************/&lt;/div&gt;&lt;div&gt;function saveDashboardSettings(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var settings = { tabs: {}, tabsInfo: [], activeTab: currentDashboardTab, queryHistory: queryHistory };&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#dashboard-tabs .dashboard-tab&quot;).each(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; var tabId = $(this).attr(&quot;id&quot;).split(&quot;-&quot;).pop();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; settings.tabs[tabId] = [];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(this).find(&quot;.dashboard-tile&quot;).each(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var tile = $(this);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; settings.tabs[tabId].push({&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; title: tile.find(&quot;.tile-title&quot;).text(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; query: tile.find(&quot;.dashboard-tile-content&quot;).data(&quot;query&quot;),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; display: tile.find(&quot;.dashboard-tile-content&quot;).data(&quot;display&quot;),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; bgcolor: tile.find(&quot;.dashboard-tile-content&quot;).data(&quot;bgcolor&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#dashboard-tabs ul li&quot;).not(&quot;#add-tab&quot;).each(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; var tabId = $(this).data(&quot;tabid&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; var tabName = $(this).find(&quot;a&quot;).text().trim();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; settings.tabsInfo.push({ id: tabId, name: tabName });&lt;/div&gt;&lt;div&gt;&amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; localStorage.setItem(&quot;dashboardSettings&quot;, JSON.stringify(settings));&lt;/div&gt;&lt;div&gt;&amp;nbsp; addChatBubble(&quot;ai&quot;, &quot;Dashboard settings saved.&quot;);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;function loadDashboardSettings(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var settings = localStorage.getItem(&quot;dashboardSettings&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(settings){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; settings = JSON.parse(settings);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; queryHistory = settings.queryHistory || [];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(&quot;#dashboard-tabs ul li&quot;).not(&quot;#add-tab&quot;).remove();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(&quot;.dashboard-tab&quot;).remove();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for(var tabId in settings.tabs){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var tabName = &quot;Dashboard &quot; + tabId;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#dashboard-tabs ul&quot;).prepend(&#39;&amp;lt;li data-tabid=&quot;&#39;+tabId+&#39;&quot;&amp;gt;&amp;lt;a href=&quot;#dashboard-tab-&#39;+tabId+&#39;&quot;&amp;gt;&#39;+tabName+&#39;&amp;lt;/a&amp;gt;&amp;lt;span class=&quot;ui-icon ui-icon-close&quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&#39;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#dashboard-tabs&quot;).append(&#39;&amp;lt;div id=&quot;dashboard-tab-&#39;+tabId+&#39;&quot; class=&quot;dashboard-tab&quot;&amp;gt;&amp;lt;div class=&quot;dashboard-tiles&quot; id=&quot;dashboard-tiles-&#39;+tabId+&#39;&quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&#39;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; settings.tabs[tabId].forEach(function(tileSetting){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; addDashboardTile(tabId, tileSetting.query, tileSetting.display, tileSetting.title, false);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; initDashboardTabs();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(&quot;#dashboard-tabs&quot;).tabs(&quot;option&quot;, &quot;active&quot;, parseInt(settings.activeTab)-1);&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;loadDashboardSettings();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Table List Updates ********************/&lt;/div&gt;&lt;div&gt;function updateTableList(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var res = db.exec(&quot;SELECT name FROM sqlite_master WHERE type=&#39;table&#39;&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var html = &quot;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(res.length &amp;amp;&amp;amp; res[0].values.length){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; res[0].values.forEach(function(row){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var tableName = row[0];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; html += &#39;&amp;lt;div class=&quot;table-item&quot; data-table=&quot;&#39;+tableName+&#39;&quot;&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;span&amp;gt;&#39;+tableName+&#39;&amp;lt;/span&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;button class=&quot;toggle-details&quot;&amp;gt;Details&amp;lt;/button&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;button class=&quot;delete-table&quot;&amp;gt;Delete&amp;lt;/button&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;div class=&quot;table-details&quot; style=&quot;display:none;&quot;&amp;gt;&amp;lt;/div&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;/div&amp;gt;&#39;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; html = &quot;&amp;lt;p&amp;gt;No tables found.&amp;lt;/p&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#table-list&quot;).html(html);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Table Details Toggle ********************/&lt;/div&gt;&lt;div&gt;$(document).on(&quot;click&quot;, &quot;.toggle-details&quot;, function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var parent = $(this).closest(&quot;.table-item&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var tableName = parent.data(&quot;table&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var detailsDiv = parent.find(&quot;.table-details&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(detailsDiv.is(&quot;:visible&quot;)){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; detailsDiv.hide();&lt;/div&gt;&lt;div&gt;&amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var res = db.exec(&quot;PRAGMA table_info(&quot; + tableName + &quot;)&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if(res.length){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var info = res[0].values;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var html = &quot;&amp;lt;ul&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; info.forEach(function(col){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;li&amp;gt;&quot; + col[1] + &quot; (&quot; + col[2] + &quot;)&amp;lt;/li&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;/ul&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; detailsDiv.html(html).show();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } catch(e) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; detailsDiv.html(&quot;&amp;lt;p&amp;gt;Error fetching details&amp;lt;/p&amp;gt;&quot;).show();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Table Deletion ********************/&lt;/div&gt;&lt;div&gt;$(document).on(&quot;click&quot;, &quot;.delete-table&quot;, function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var parent = $(this).closest(&quot;.table-item&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var tableName = parent.data(&quot;table&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(confirm(&quot;Are you sure you want to delete table &quot; + tableName + &quot;?&quot;)){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; db.run(&quot;DROP TABLE IF EXISTS &quot; + tableName);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; updateTableList();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } catch(e){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; alert(&quot;Error deleting table: &quot; + e.message);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Excel File Import &amp;amp; Processing ********************/&lt;/div&gt;&lt;div&gt;$(&quot;#file-attach-btn&quot;).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#excel-file-input&quot;).click();&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#excel-file-input&quot;).on(&quot;change&quot;, function(e){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var file = e.target.files[0];&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(file){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; var reader = new FileReader();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; reader.onload = function(evt){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var data = evt.target.result;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var workbook = XLSX.read(data, { type: &#39;binary&#39; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var summaryMsg = &quot;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; workbook.SheetNames.forEach(function(sheetName){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var sheet = workbook.Sheets[sheetName];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var json = XLSX.utils.sheet_to_json(sheet, { header: 1, defval: &quot;&quot; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // If second row first column equals &quot;Component:&quot; =&amp;gt; shift rows and columns.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;if (json.length &amp;gt; 1 &amp;amp;&amp;amp; (json[1][0].toString().trim().includes(&quot;Component:&quot;) || json[1][0].toString().trim().includes(&quot;Connection:&quot;))) {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var newJson = [];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for(var i = 1; i &amp;lt; json.length; i++){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newJson.push(json[i].slice(1));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; json = newJson;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(json.length &amp;gt; 0){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var headers = json[0].map(function(h, i){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return (h &amp;amp;&amp;amp; h.toString().trim() !== &quot;&quot;) ? h.toString().replace(/\W/g, &quot;_&quot;) : &quot;col&quot; + i;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var tableName = sheetName.replace(/\W/g, &quot;_&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var sql = &quot;CREATE TABLE IF NOT EXISTS &quot; + tableName + &quot; (&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; headers.forEach(function(header, index){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sql += header + &quot; TEXT&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(index &amp;lt; headers.length - 1){ sql += &quot;, &quot;; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sql += &quot;)&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; db.run(sql);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var rowCount = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for(var i = 1; i &amp;lt; json.length; i++){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var row = json[i];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var placeholders = headers.map(function(){ return &quot;?&quot;; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var stmt = db.prepare(&quot;INSERT INTO &quot; + tableName + &quot; VALUES (&quot; + placeholders.join(&quot;,&quot;) + &quot;)&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var rowData = headers.map(function(_, idx){ return row[idx] !== undefined ? row[idx] : &quot;&quot;; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stmt.run(rowData);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stmt.free();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rowCount++;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; summaryMsg += &quot;Table &quot; + tableName + &quot; created with &quot; + rowCount + &quot; records.\n&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch(err) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; summaryMsg += &quot;Error creating table &quot; + tableName + &quot;: &quot; + err.message + &quot;\n&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; updateTableList();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; addChatBubble(&quot;ai&quot;, &quot;&amp;lt;pre&amp;gt;&quot; + summaryMsg + &quot;&amp;lt;/pre&amp;gt;&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; };&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; reader.readAsBinaryString(file);&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#drop-zone&quot;).on(&quot;dragover&quot;, function(e){&lt;/div&gt;&lt;div&gt;&amp;nbsp; e.preventDefault();&lt;/div&gt;&lt;div&gt;&amp;nbsp; e.stopPropagation();&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(this).css(&quot;background-color&quot;, &quot;#eef&quot;);&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#drop-zone&quot;).on(&quot;dragleave&quot;, function(e){&lt;/div&gt;&lt;div&gt;&amp;nbsp; e.preventDefault();&lt;/div&gt;&lt;div&gt;&amp;nbsp; e.stopPropagation();&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(this).css(&quot;background-color&quot;, &quot;#fff&quot;);&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#drop-zone&quot;).on(&quot;drop&quot;, function(e){&lt;/div&gt;&lt;div&gt;&amp;nbsp; e.preventDefault();&lt;/div&gt;&lt;div&gt;&amp;nbsp; e.stopPropagation();&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(this).css(&quot;background-color&quot;, &quot;#fff&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var files = e.originalEvent.dataTransfer.files;&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(files.length){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(&quot;#excel-file-input&quot;)[0].files = files;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(&quot;#excel-file-input&quot;).trigger(&quot;change&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Chat &amp;amp; Query Submission ********************/&lt;/div&gt;&lt;div&gt;function addChatBubble(type, content) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; var bubble = $(&quot;&amp;lt;div&amp;gt;&quot;).addClass(&quot;chat-bubble&quot;).addClass(type).html(content);&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#chat-window&quot;).append(bubble);&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#chat-window&quot;).scrollTop($(&quot;#chat-window&quot;)[0].scrollHeight);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;$(&quot;#query-textbox&quot;).on(&quot;input&quot;, function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; this.style.height = &quot;auto&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; var newHeight = Math.min(this.scrollHeight, window.innerHeight * 0.4);&lt;/div&gt;&lt;div&gt;&amp;nbsp; this.style.height = newHeight + &quot;px&quot;;&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;// Make query textbox resizable using jQuery UI (only an &quot;n&quot; handle at top)&lt;/div&gt;&lt;div&gt;$(&quot;#query-textbox&quot;).resizable({ handles: &quot;n&quot; });&lt;/div&gt;&lt;div&gt;function submitQuery(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var queryText = $(&quot;#query-textbox&quot;).val().trim();&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(queryText === &quot;&quot;) return;&lt;/div&gt;&lt;div&gt;&amp;nbsp; var dbEngine = $(&quot;#db-engine&quot;).val();&lt;/div&gt;&lt;div&gt;&amp;nbsp; addChatBubble(&quot;user&quot;, queryText);&lt;/div&gt;&lt;div&gt;&amp;nbsp; queryHistory.push(queryText);&lt;/div&gt;&lt;div&gt;&amp;nbsp; historyIndex = queryHistory.length;&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#query-textbox&quot;).val(&quot;&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(dbEngine === &quot;sqlite&quot;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var modifier = &quot;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if(queryText.indexOf(&quot;&amp;gt;&amp;gt;&quot;) !== -1){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var parts = queryText.split(&quot;&amp;gt;&amp;gt;&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; queryText = parts[0].trim();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; modifier = parts[1].trim().toLowerCase();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var res = db.exec(queryText);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if(res.length){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(modifier === &quot;bar&quot; || modifier === &quot;donut&quot; || modifier === &quot;pie&quot; || modifier === &quot;tile&quot;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var canvasId = &quot;chart_&quot; + new Date().getTime();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; addChatBubble(&quot;ai&quot;, &#39;&amp;lt;canvas id=&quot;&#39;+canvasId+&#39;&quot;&amp;gt;&amp;lt;/canvas&amp;gt;&#39; +&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;button class=&quot;add-to-dashboard&quot; data-query=&quot;&#39; + queryText + &#39;&quot; data-display=&quot;&#39;+modifier+&#39;&quot;&amp;gt;Add to Dashboard&amp;lt;/button&amp;gt;&#39;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var labels = res[0].values.map(function(row){ return row[0]; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var data = res[0].values.map(function(row){ return Number(row[1]) || 0; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var chartType = (modifier === &quot;donut&quot;) ? &quot;doughnut&quot; : modifier;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var bg = &quot;#0084ff&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var palette = [&#39;#0084ff&#39;,&#39;#00C49F&#39;,&#39;#FFBB28&#39;,&#39;#FF8042&#39;,&#39;#A569BD&#39;,&#39;#FF6666&#39;,&#39;#00BFFF&#39;,&#39;#32CD32&#39;];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var backgroundColors = [];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if((chartType === &quot;doughnut&quot; || chartType === &quot;pie&quot;) &amp;amp;&amp;amp; labels.length &amp;gt; 1){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for(var i=0; i&amp;lt;labels.length; i++){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; backgroundColors.push(palette[i % palette.length]);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; backgroundColors = bg;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; setTimeout(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var ctx = document.getElementById(canvasId);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ctx.style.maxWidth = &quot;100%&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ctx.style.maxHeight = &quot;calc(100% - 50px)&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new Chart(ctx, {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; type: chartType,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; data: {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; labels: labels,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; datasets: [{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; label: &#39;Dataset&#39;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; data: data,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; backgroundColor: (chartType === &quot;doughnut&quot; || chartType === &quot;pie&quot;) ? backgroundColors : bg&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }]&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; },&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; options: {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; plugins: {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; legend: { display: true },&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; datalabels: {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; display: $(&quot;#data-labels&quot;).prop(&quot;checked&quot;),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; color: &#39;#000&#39;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; },&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; plugins: $(&quot;#data-labels&quot;).prop(&quot;checked&quot;) ? [ChartDataLabels] : []&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }, 100);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var html = &quot;&amp;lt;table border=&#39;1&#39; style=&#39;border-collapse: collapse; width:100%&#39;&amp;gt;&amp;lt;thead&amp;gt;&amp;lt;tr&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; res[0].columns.forEach(function(col){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;th&amp;gt;&quot; + col + &quot;&amp;lt;/th&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;/tr&amp;gt;&amp;lt;/thead&amp;gt;&amp;lt;tbody&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; res[0].values.forEach(function(row){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;tr&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; row.forEach(function(cell){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;td&amp;gt;&quot; + cell + &quot;&amp;lt;/td&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;/tr&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; addChatBubble(&quot;ai&quot;, html +&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;button class=&quot;add-to-dashboard&quot; data-query=&quot;&#39; + queryText + &#39;&quot; data-display=&quot;table&quot;&amp;gt;Add to Dashboard&amp;lt;/button&amp;gt;&#39;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; addChatBubble(&quot;ai&quot;, &quot;Query executed, but no results returned.&quot; +&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;button class=&quot;add-to-dashboard&quot; data-query=&quot;&#39; + queryText + &#39;&quot; data-display=&quot;table&quot;&amp;gt;Add to Dashboard&amp;lt;/button&amp;gt;&#39;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } catch(e) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; addChatBubble(&quot;ai&quot;, &quot;&amp;lt;span style=&#39;color:red&#39;&amp;gt;Error: &quot; + e.message + &quot;&amp;lt;/span&amp;gt;&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; addChatBubble(&quot;ai&quot;, &quot;This engine is not supported in this demo.&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;$(&quot;#query-textbox&quot;).keydown(function(e){&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(e.key === &quot;Enter&quot; &amp;amp;&amp;amp; !e.shiftKey){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.preventDefault();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; submitQuery();&lt;/div&gt;&lt;div&gt;&amp;nbsp; } else if(e.altKey &amp;amp;&amp;amp; e.key === &quot;ArrowUp&quot;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if(historyIndex &amp;gt; 0){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; historyIndex--;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#query-textbox&quot;).val(queryHistory[historyIndex]);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; } else if(e.altKey &amp;amp;&amp;amp; e.key === &quot;ArrowDown&quot;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if(historyIndex &amp;lt; queryHistory.length - 1){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; historyIndex++;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#query-textbox&quot;).val(queryHistory[historyIndex]);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#query-textbox&quot;).val(&quot;&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; historyIndex = queryHistory.length;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#submit-btn&quot;).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; submitQuery();&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Direct OpenAI Button ********************/&lt;/div&gt;&lt;div&gt;$(&quot;#direct-openai&quot;).click(function () {&lt;/div&gt;&lt;div&gt;&amp;nbsp; var userQuery = $(&quot;#query-textbox&quot;).val().trim();&lt;/div&gt;&lt;div&gt;&amp;nbsp; if (!userQuery) return;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; // Build the schema as a JSON array.&lt;/div&gt;&lt;div&gt;&amp;nbsp; // Each element in the array will be an object with a &quot;table&quot; property and a &quot;columns&quot; array.&lt;/div&gt;&lt;div&gt;&amp;nbsp; var tables = db.exec(&quot;SELECT name FROM sqlite_master WHERE type=&#39;table&#39;&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var schema = [];&lt;/div&gt;&lt;div&gt;&amp;nbsp; if (tables &amp;amp;&amp;amp; tables.length &amp;gt; 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tables[0].values.forEach(function (row) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var tableName = row[0];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var tableInfo = db.exec(&quot;PRAGMA table_info(&quot; + tableName + &quot;)&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (tableInfo &amp;amp;&amp;amp; tableInfo.length &amp;gt; 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Create an array of column descriptions like &quot;column_name (column_type)&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var cols = tableInfo[0].values.map(function (col) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return col[1] + &quot; (&quot; + col[2] + &quot;)&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; schema.push({ table: tableName, columns: cols });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; // Hard-coded environment key for client validation.&lt;/div&gt;&lt;div&gt;&amp;nbsp; var clientEnvKey = &quot;SECRET_ENV_KEY&quot;;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; // Call your deployed Netlify function with the structured data.&lt;/div&gt;&lt;div&gt;&amp;nbsp; $.ajax({&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; url: &quot;https://sunny-arithmetic-cc18db.netlify.app/.netlify/functions/openai&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; type: &quot;POST&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; contentType: &quot;application/json&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; data: JSON.stringify({&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; userQuery: userQuery,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; schema: schema, // This is a JSON array.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; envKey: clientEnvKey&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; success: function (response) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; // The server returns a JSON object with a &quot;sql&quot; property.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (response &amp;amp;&amp;amp; response.sql) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var sqlQuery = response.sql.trim();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Remove markdown code fences if they are present.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sqlQuery = sqlQuery.replace(/^```(sql)?/i, &quot;&quot;).replace(/```$/, &quot;&quot;).trim();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; addChatBubble(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ai&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;OpenAI returned query: &quot; +&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sqlQuery +&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot; &amp;lt;button class=&#39;add-to-dashboard&#39; data-query=&#39;&quot; +&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sqlQuery +&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;&#39; data-display=&#39;table&#39;&amp;gt;Add to Dashboard&amp;lt;/button&amp;gt;&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; );&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var res = db.exec(sqlQuery);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (res &amp;amp;&amp;amp; res.length &amp;gt; 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var html =&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;&amp;lt;table border=&#39;1&#39; style=&#39;border-collapse: collapse; width:100%&#39;&amp;gt;&amp;lt;thead&amp;gt;&amp;lt;tr&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; res[0].columns.forEach(function (col) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;th&amp;gt;&quot; + col + &quot;&amp;lt;/th&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;/tr&amp;gt;&amp;lt;/thead&amp;gt;&amp;lt;tbody&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; res[0].values.forEach(function (row) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;tr&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; row.forEach(function (cell) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;td&amp;gt;&quot; + cell + &quot;&amp;lt;/td&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;/tr&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; addChatBubble(&quot;ai&quot;, html);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; addChatBubble(&quot;ai&quot;, &quot;Query executed but returned no results.&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch (e) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; addChatBubble(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ai&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;&amp;lt;span style=&#39;color:red&#39;&amp;gt;Error executing query: &quot; + e.message + &quot;&amp;lt;/span&amp;gt;&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; );&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; addChatBubble(&quot;ai&quot;, &quot;&amp;lt;span style=&#39;color:red&#39;&amp;gt;No SQL returned from server!&amp;lt;/span&amp;gt;&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; },&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; error: function (xhr, status, error) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; addChatBubble(&quot;ai&quot;, &quot;&amp;lt;span style=&#39;color:red&#39;&amp;gt;Error calling Netlify function: &quot; + error + &quot;&amp;lt;/span&amp;gt;&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; });&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Get Copilot Prompt Button ********************/&lt;/div&gt;&lt;div&gt;$(&quot;#get-copilot&quot;).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var userQuery = $(&quot;#query-textbox&quot;).val().trim();&lt;/div&gt;&lt;div&gt;&amp;nbsp; var tables = db.exec(&quot;SELECT name FROM sqlite_master WHERE type=&#39;table&#39;&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var schemaText = &quot;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(tables.length){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tables[0].values.forEach(function(row){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var table = row[0];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var tableInfo = db.exec(&quot;PRAGMA table_info(&quot; + table + &quot;)&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if(tableInfo.length){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var cols = tableInfo[0].values.map(function(col){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return col[1] + &quot; (&quot; + col[2] + &quot;)&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; schemaText += &quot;Table &quot; + table + &quot;: Columns: &quot; + cols.join(&quot;, &quot;) + &quot;\n&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; schemaText = &quot;No tables available.&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; var prompt = &quot;Using SQLite syntax, based on the following schema:\n&quot; + schemaText +&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &quot;\nGenerate the SQL query for the following natural language description:\n\&quot;&quot; + userQuery +&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &quot;\&quot;\nReturn only the SQL query.&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#copilot-prompt&quot;).val(prompt);&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#copilot-modal&quot;).dialog({&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; modal: true,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; width: 500,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; buttons: { &quot;Close&quot;: function(){ $(this).dialog(&quot;close&quot;); } }&lt;/div&gt;&lt;div&gt;&amp;nbsp; });&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#copy-copilot&quot;).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#copilot-prompt&quot;).select();&lt;/div&gt;&lt;div&gt;&amp;nbsp; document.execCommand(&quot;copy&quot;);&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Add to Dashboard &amp;amp; Dashboard Tile Handling ********************/&lt;/div&gt;&lt;div&gt;$(document).on(&quot;click&quot;, &quot;.add-to-dashboard&quot;, function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var query = $(this).data(&quot;query&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var display = $(this).data(&quot;display&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; addDashboardTile(currentDashboardTab, query, display);&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;function addDashboardTile(tabId, query, display, title, autoRefresh) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; autoRefresh = (autoRefresh === undefined) ? true : autoRefresh;&lt;/div&gt;&lt;div&gt;&amp;nbsp; var tileId = &quot;tile_&quot; + new Date().getTime();&lt;/div&gt;&lt;div&gt;&amp;nbsp; title = title || &quot;Tile&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; var tileHtml = &#39;&amp;lt;div class=&quot;dashboard-tile&quot; id=&quot;&#39;+tileId+&#39;&quot;&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;div class=&quot;dashboard-tile-header&quot;&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;span class=&quot;tile-title&quot;&amp;gt;&#39;+title+&#39;&amp;lt;/span&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;div class=&quot;tile-controls&quot;&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;button class=&quot;maximize-tile&quot;&amp;gt;[ ]&amp;lt;/button&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;button class=&quot;refresh-tile&quot;&amp;gt;⟳&amp;lt;/button&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;button class=&quot;settings-tile&quot;&amp;gt;⚙&amp;lt;/button&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;button class=&quot;delete-tile&quot;&amp;gt;✖&amp;lt;/button&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;/div&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;/div&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;div class=&quot;dashboard-tile-content&quot; data-query=&quot;&#39;+ query +&#39;&quot; data-display=&quot;&#39;+display+&#39;&quot;&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;Loading...&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;/div&amp;gt;&#39;+&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;/div&amp;gt;&#39;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#dashboard-tiles-&quot; + tabId).append(tileHtml);&lt;/div&gt;&lt;div&gt;&amp;nbsp; saveDashboardSettings();&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(autoRefresh) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; runTileQuery($(&quot;#&quot; + tileId).find(&quot;.dashboard-tile-content&quot;));&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;function runTileQuery(tileContent){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var query = tileContent.data(&quot;query&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var display = tileContent.data(&quot;display&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; var res = db.exec(query);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if(res.length){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if(display === &quot;grid&quot;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var html = &quot;&amp;lt;table border=&#39;1&#39; class=&#39;sortable&#39; style=&#39;border-collapse: collapse; width:100%&#39; data-sort-asc=&#39;true&#39;&amp;gt;&amp;lt;thead&amp;gt;&amp;lt;tr&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; res[0].columns.forEach(function(col){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;th&amp;gt;&quot; + col + &quot;&amp;lt;/th&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;/tr&amp;gt;&amp;lt;/thead&amp;gt;&amp;lt;tbody&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; res[0].values.forEach(function(row){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;tr&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; row.forEach(function(cell){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;td&amp;gt;&quot; + cell + &quot;&amp;lt;/td&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;/tr&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tileContent.html(html);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; makeTableSortable(tileContent.find(&quot;table&quot;)[0]);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; else if(display === &quot;table&quot;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var html = &quot;&amp;lt;table border=&#39;1&#39; style=&#39;border-collapse: collapse; width:100%&#39;&amp;gt;&amp;lt;thead&amp;gt;&amp;lt;tr&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; res[0].columns.forEach(function(col){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;th&amp;gt;&quot; + col + &quot;&amp;lt;/th&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;/tr&amp;gt;&amp;lt;/thead&amp;gt;&amp;lt;tbody&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; res[0].values.forEach(function(row){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;tr&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; row.forEach(function(cell){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;td&amp;gt;&quot; + cell + &quot;&amp;lt;/td&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;/tr&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; html += &quot;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tileContent.html(html);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var canvasId = &quot;chart_&quot; + new Date().getTime();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tileContent.html(&#39;&amp;lt;canvas id=&quot;&#39;+canvasId+&#39;&quot;&amp;gt;&amp;lt;/canvas&amp;gt;&#39;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var labels = res[0].values.map(function(row){ return row[0]; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var data = res[0].values.map(function(row){ return Number(row[1]) || 0; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var chartType = (display === &quot;donut&quot;) ? &quot;doughnut&quot; : display;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var bg = tileContent.data(&quot;bgcolor&quot;) || &quot;#0084ff&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var useDataLabels = tileContent.data(&quot;datalabels&quot;) || false;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var backgroundColors;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if((chartType === &quot;doughnut&quot; || chartType === &quot;pie&quot;) &amp;amp;&amp;amp; labels.length &amp;gt; 1){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var palette = [&#39;#0084ff&#39;,&#39;#00C49F&#39;,&#39;#FFBB28&#39;,&#39;#FF8042&#39;,&#39;#A569BD&#39;,&#39;#FF6666&#39;,&#39;#00BFFF&#39;,&#39;#32CD32&#39;];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; backgroundColors = [];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for(var i=0; i&amp;lt;labels.length; i++){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; backgroundColors.push(palette[i % palette.length]);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; backgroundColors = bg;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; setTimeout(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var ctx = document.getElementById(canvasId);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ctx.style.maxWidth = &quot;100%&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ctx.style.maxHeight = &quot;calc(100% - 50px)&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new Chart(ctx, {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; type: chartType,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; data: {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; labels: labels,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; datasets: [{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; label: &#39;Dataset&#39;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; data: data,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; backgroundColor: (chartType === &quot;doughnut&quot; || chartType === &quot;pie&quot;) ? backgroundColors : bg&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }]&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; },&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; options: {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; plugins: {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; legend: { display: true },&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; datalabels: {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; display: useDataLabels,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; color: &#39;#000&#39;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; },&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; plugins: useDataLabels ? [ChartDataLabels] : []&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }, 100);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; tileContent.html(&quot;Query executed but returned no results.&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; } catch(e) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tileContent.html(&quot;&amp;lt;p style=&#39;color:red&#39;&amp;gt;Error: &quot; + e.message + &quot;&amp;lt;/p&amp;gt;&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Dashboard Tile Controls ********************/&lt;/div&gt;&lt;div&gt;$(document).on(&quot;click&quot;, &quot;.refresh-tile&quot;, function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var tileContent = $(this).closest(&quot;.dashboard-tile&quot;).find(&quot;.dashboard-tile-content&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; runTileQuery(tileContent);&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(document).on(&quot;click&quot;, &quot;.delete-tile&quot;, function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(confirm(&quot;Delete this tile?&quot;)){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(this).closest(&quot;.dashboard-tile&quot;).remove();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; saveDashboardSettings();&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(document).on(&quot;click&quot;, &quot;.maximize-tile&quot;, function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var tile = $(this).closest(&quot;.dashboard-tile&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; tile.toggleClass(&quot;maximized&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(tile.hasClass(&quot;maximized&quot;)){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tile.css({&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;position&quot;: &quot;fixed&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;top&quot;: &quot;60px&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;left&quot;: &quot;0&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;width&quot;: &quot;100%&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;height&quot;: &quot;calc(100% - 60px)&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;z-index&quot;: 2000&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tile.removeAttr(&quot;style&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(document).on(&quot;click&quot;, &quot;.settings-tile&quot;, function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var currentTile = $(this).closest(&quot;.dashboard-tile&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var tileContent = currentTile.find(&quot;.dashboard-tile-content&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var query = tileContent.data(&quot;query&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var display = tileContent.data(&quot;display&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#tile-query&quot;).val(query);&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#chart-type&quot;).val(display);&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#tile-title&quot;).val(currentTile.find(&quot;.tile-title&quot;).text());&lt;/div&gt;&lt;div&gt;&amp;nbsp; var currentBg = tileContent.data(&quot;bgcolor&quot;) || &quot;#0084ff&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; var currentDataLabels = tileContent.data(&quot;datalabels&quot;) || false;&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#bg-color&quot;).val(currentBg);&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#data-labels&quot;).prop(&quot;checked&quot;, currentDataLabels);&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#chart-settings-modal&quot;).dialog({&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; modal: true,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; width: 400,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; buttons: { &quot;Cancel&quot;: function(){ $(this).dialog(&quot;close&quot;); } }&lt;/div&gt;&lt;div&gt;&amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#save-chart-settings&quot;).off(&quot;click&quot;).on(&quot;click&quot;, function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; var newTitle = $(&quot;#tile-title&quot;).val();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; var newChartType = $(&quot;#chart-type&quot;).val();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; var newQuery = $(&quot;#tile-query&quot;).val();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; var newBg = $(&quot;#bg-color&quot;).val();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; var newDataLabels = $(&quot;#data-labels&quot;).prop(&quot;checked&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; currentTile.find(&quot;.tile-title&quot;).text(newTitle);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tileContent.data(&quot;query&quot;, newQuery);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tileContent.data(&quot;display&quot;, newChartType);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tileContent.data(&quot;bgcolor&quot;, newBg);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tileContent.data(&quot;datalabels&quot;, newDataLabels);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; runTileQuery(tileContent);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(&quot;#chart-settings-modal&quot;).dialog(&quot;close&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; saveDashboardSettings();&lt;/div&gt;&lt;div&gt;&amp;nbsp; });&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Dashboard Tab Events ********************/&lt;/div&gt;&lt;div&gt;$(&quot;#dashboard-tabs&quot;).on(&quot;dblclick&quot;, &quot;li a&quot;, function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var currentName = $(this).text();&lt;/div&gt;&lt;div&gt;&amp;nbsp; var newName = prompt(&quot;Enter new tab name:&quot;, currentName);&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(newName &amp;amp;&amp;amp; newName.trim() !== &quot;&quot;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(this).text(newName.trim());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; saveDashboardSettings();&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#dashboard-tabs&quot;).on(&quot;click&quot;, &quot;span.ui-icon-close&quot;, function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var panelId = $(this).closest(&quot;li&quot;).remove().attr(&quot;aria-controls&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#&quot; + panelId).remove();&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#dashboard-tabs&quot;).tabs(&quot;refresh&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; saveDashboardSettings();&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#add-tab&quot;).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var tabCount = $(&quot;#dashboard-tabs ul li&quot;).not(&quot;#add-tab&quot;).length + 1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; var newTabId = tabCount.toString();&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#dashboard-tabs ul&quot;).find(&quot;#add-tab&quot;).before(&#39;&amp;lt;li data-tabid=&quot;&#39;+newTabId+&#39;&quot;&amp;gt;&amp;lt;a href=&quot;#dashboard-tab-&#39;+newTabId+&#39;&quot;&amp;gt;Dashboard &#39;+newTabId+&#39;&amp;lt;/a&amp;gt;&amp;lt;span class=&quot;ui-icon ui-icon-close&quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&#39;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#dashboard-tabs&quot;).append(&#39;&amp;lt;div id=&quot;dashboard-tab-&#39;+newTabId+&#39;&quot; class=&quot;dashboard-tab&quot;&amp;gt;&amp;lt;div class=&quot;dashboard-tiles&quot; id=&quot;dashboard-tiles-&#39;+newTabId+&#39;&quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&#39;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#dashboard-tabs&quot;).tabs(&quot;refresh&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; saveDashboardSettings();&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#refresh-dashboard&quot;).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#dashboard-tabs .dashboard-tab:visible&quot;).find(&quot;.dashboard-tile-content&quot;).each(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; runTileQuery($(this));&lt;/div&gt;&lt;div&gt;&amp;nbsp; });&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** View Switching ********************/&lt;/div&gt;&lt;div&gt;$(&quot;#view-assistant&quot;).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#dashboard-view&quot;).hide();&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#data-assistant-view&quot;).show();&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#view-dashboard&quot;).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#data-assistant-view&quot;).hide();&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#dashboard-view&quot;).show();&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#toggle-assistant&quot;).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#dashboard-view&quot;).hide();&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#data-assistant-view&quot;).show();&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#switch-to-dashboard&quot;).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#data-assistant-view&quot;).hide();&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#dashboard-view&quot;).show();&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#toggle-view&quot;).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; if($(&quot;#data-assistant-view&quot;).is(&quot;:visible&quot;)){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(&quot;#data-assistant-view&quot;).hide();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(&quot;#dashboard-view&quot;).show();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(this).text(&quot;Switch to Data Assistant&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(&quot;#dashboard-view&quot;).hide();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(&quot;#data-assistant-view&quot;).show();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; $(this).text(&quot;Switch to Dashboard&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Menu Dropdown Handling ********************/&lt;/div&gt;&lt;div&gt;$(&quot;#file-menu&quot;).click(function(e){&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(this).find(&quot;.dropdown&quot;).toggle();&lt;/div&gt;&lt;div&gt;&amp;nbsp; e.stopPropagation();&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#view-menu&quot;).click(function(e){&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(this).find(&quot;.dropdown&quot;).toggle();&lt;/div&gt;&lt;div&gt;&amp;nbsp; e.stopPropagation();&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;.header-left .menu&quot;).click(function(e){&lt;/div&gt;&lt;div&gt;&amp;nbsp; e.stopPropagation();&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(document).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;.menu .dropdown&quot;).hide();&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Export/Import Settings ********************/&lt;/div&gt;&lt;div&gt;$(&quot;#export-settings&quot;).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var exportData = { dashboard: localStorage.getItem(&quot;dashboardSettings&quot;) };&lt;/div&gt;&lt;div&gt;&amp;nbsp; var blob = new Blob([JSON.stringify(exportData, null, 2)], { type: &quot;application/json&quot; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; var url = URL.createObjectURL(blob);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var a = document.createElement(&quot;a&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; a.href = url;&lt;/div&gt;&lt;div&gt;&amp;nbsp; a.download = &quot;dashboard_settings.id&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; a.click();&lt;/div&gt;&lt;div&gt;&amp;nbsp; URL.revokeObjectURL(url);&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#import-settings&quot;).click(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#import-file-input&quot;).click();&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#import-file-input&quot;).on(&quot;change&quot;, function(e){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var file = e.target.files[0];&lt;/div&gt;&lt;div&gt;&amp;nbsp; if(file){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; var reader = new FileReader();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; reader.onload = function(evt){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var data = JSON.parse(evt.target.result);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if(data.dashboard){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; localStorage.setItem(&quot;dashboardSettings&quot;, data.dashboard);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; location.reload();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; };&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; reader.readAsText(file);&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** jQuery UI Resizable for Left Pane ********************/&lt;/div&gt;&lt;div&gt;$(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#left-pane&quot;).resizable({&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; handles: &quot;e&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; minWidth: 100,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; maxWidth: $(&quot;#data-assistant-view&quot;).width() - ($(&quot;#data-assistant-view&quot;).width() * 0.2),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; resize: function(event, ui){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var newLeftWidth = ui.size.width;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var totalWidth = $(&quot;#data-assistant-view&quot;).width();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#right-pane&quot;).css(&quot;width&quot;, totalWidth - newLeftWidth);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; });&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(window).resize(function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; var totalWidth = $(&quot;#data-assistant-view&quot;).width();&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#left-pane&quot;).resizable(&quot;option&quot;, &quot;maxWidth&quot;, totalWidth - totalWidth * 0.2);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var leftWidth = $(&quot;#left-pane&quot;).width();&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#right-pane&quot;).css(&quot;width&quot;, totalWidth - leftWidth);&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** Make Table Sortable (Grid View) ********************/&lt;/div&gt;&lt;div&gt;function makeTableSortable(table) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; var ths = table.querySelectorAll(&quot;th&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; ths.forEach(function(th, index) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; th.style.cursor = &quot;pointer&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; th.addEventListener(&quot;click&quot;, function() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sortTableByColumn(table, index);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; });&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;function sortTableByColumn(table, column) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; var tbody = table.tBodies[0];&lt;/div&gt;&lt;div&gt;&amp;nbsp; var rows = Array.from(tbody.rows);&lt;/div&gt;&lt;div&gt;&amp;nbsp; var asc = table.getAttribute(&quot;data-sort-asc&quot;) === &quot;true&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; rows.sort(function(a, b) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; var cellA = a.cells[column].innerText;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; var cellB = b.cells[column].innerText;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return asc ? cellA.localeCompare(cellB, undefined, { numeric: true })&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: cellB.localeCompare(cellA, undefined, { numeric: true });&lt;/div&gt;&lt;div&gt;&amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; table.setAttribute(&quot;data-sort-asc&quot;, !asc);&lt;/div&gt;&lt;div&gt;&amp;nbsp; rows.forEach(function(row){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tbody.appendChild(row);&lt;/div&gt;&lt;div&gt;&amp;nbsp; });&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/******************** SharePoint Connector Handling ********************/&lt;/div&gt;&lt;div&gt;$(&quot;#sharepoint-connector&quot;).click(function(e){&lt;/div&gt;&lt;div&gt;&amp;nbsp; e.preventDefault();&lt;/div&gt;&lt;div&gt;&amp;nbsp; $(&quot;#sharepoint-dialog&quot;).dialog(&quot;open&quot;);&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;$(&quot;#sharepoint-dialog&quot;).dialog({&lt;/div&gt;&lt;div&gt;&amp;nbsp; autoOpen: false,&lt;/div&gt;&lt;div&gt;&amp;nbsp; modal: true,&lt;/div&gt;&lt;div&gt;&amp;nbsp; width: 400,&lt;/div&gt;&lt;div&gt;&amp;nbsp; buttons: {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &quot;Connect&quot;: function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var siteURL = $(&quot;#sp-site-url&quot;).val().trim();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; var listName = $(&quot;#sp-list-name&quot;).val().trim();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if(siteURL === &quot;&quot; || listName === &quot;&quot;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#sp-error&quot;).text(&quot;Both Site URL and List Name are required.&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#sp-error&quot;).show();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Simulate SharePoint connection and import&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var tableName = listName.replace(/\W/g, &quot;_&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var sql = &quot;CREATE TABLE IF NOT EXISTS &quot; + tableName + &quot; (Title TEXT, Created TEXT, Modified TEXT)&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; db.run(sql);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var stmt = db.prepare(&quot;INSERT INTO &quot; + tableName + &quot; VALUES (?,?,?)&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stmt.run([&quot;Item1&quot;, &quot;2023-01-01&quot;, &quot;2023-01-02&quot;]);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stmt.run([&quot;Item2&quot;, &quot;2023-02-01&quot;, &quot;2023-02-02&quot;]);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stmt.run([&quot;Item3&quot;, &quot;2023-03-01&quot;, &quot;2023-03-02&quot;]);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stmt.free();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; updateTableList();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; addChatBubble(&quot;ai&quot;, &quot;SharePoint list &#39;&quot; + listName + &quot;&#39; imported as table &#39;&quot; + tableName + &quot;&#39;.&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#sp-error&quot;).hide();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#sharepoint-dialog&quot;).dialog(&quot;close&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch(err) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#sp-error&quot;).text(&quot;Error importing SharePoint list: &quot; + err.message);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#sp-error&quot;).show();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; },&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &quot;Cancel&quot;: function(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; $(this).dialog(&quot;close&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rhombus;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-120" y="-900" width="80" height="80" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
